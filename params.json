{"name":"Colorify","tagline":"Simple HTML5 library to colorize your images","body":"Colorify\r\n----------\r\n\r\nWhile working on some file manipulation I thought it may be useful to have a library to encapsulate some code I've been writing.\r\nMaybe it can be useful for somebody, so here it is.\r\n\r\nThis library enable you to colorize images in one go to multiple colors.\r\n\r\nfor the moment only Canvas HTML5 API is used: in modern browsers it can use blend modes while the fallback for older browsers (IE...) is a more expensive pixel by pixel manipulation.\r\n\r\nInstall the library\r\n----------\r\n\r\nBrowser installation: get the minified `colorify.min.js` file and add it to your page:\r\n\r\n```html\r\n<script src=\"./path/to/colorify.min.js\"></script>\r\n```\r\n\r\nNPM & Bower: coming soon...\r\n\r\nUse the library\r\n----------\r\n\r\nCreate a painter, then use it to colorize your images: the result will be the second argument in the callback.\r\n\r\n```js\r\nvar painter = Colorify.create();\r\n\r\npainter.colorify('my-image-url.png', ['red', 'blue', etc...], {}, function(error, results){\r\n\t// here results will be an array of images (encoded in Base64 format)\r\n\timageElement.src = results[0];\r\n});\r\n```\r\n\r\nFor the full API documentation have a look at: [Colorify page](...)\r\n\r\n\r\nRun the examples\r\n----------\r\n\r\nOpen the Command Prompt in Windows, the Terminal in OSX or the console in Linux and type:\r\n\r\n```bash\r\npython -m SimpleHTTPServer\r\n```\r\n\r\nNow open your browser and go to `http://localhost:8000/examples/<name-of-the-example>.htm`\r\n\r\nContribute\r\n----------\r\n\r\nAny contribute is very welcome:\r\n\r\n* In case you find some bug please log an issue\r\n* In case there's a pull request, please add a test for the issue fixed (testing arriving soon...)\r\n\r\nIn case you have any good idea to propose to the project let me know, you can find me here: [@dej611](https://twitter.com/dej611).\r\n\r\nThis project uses Gulp as build system, so it's enough to run `gulp` in your console to make the minified version.\r\n\r\nFAQ\r\n----------\r\n\r\n**The Javascript console reports \"The canvas has been tainted by cross-origin data\"**\r\n\r\nThis is most probably because you're trying to use an image from a different domain (Cross Origin Resource Sharing) which is not allowed for security reasons: see this [SO explanation](http://stackoverflow.com/questions/13674835/canvas-tainted-by-cross-origin-data) for some details.  \r\nAlso, it may happen if you're using some SVGs: still [for security reasons](https://code.google.com/p/chromium/issues/detail?id=294129) it still not allowed.\r\nLast option: have you started the web server when you're looking at the HTML page in Chrome? Using the file protocol every request for an external resource is considered CORS by default (see first point here).\r\n\r\nLicense\r\n-----------\r\n\r\nLicensed under GPL v.2 (see LICENSE file)","google":"UA-4417733-10","note":"Don't delete this file! It's used internally to help with page regeneration."}